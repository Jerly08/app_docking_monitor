// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User Model for Authentication & Role Management
model User {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String   @unique
  password  String   // hashed with bcrypt
  role      String   @default("USER") // ADMIN, MANAGER, USER
  fullName  String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

// Project Model for Multi-Project Management
model Project {
  id              String     @id @default(cuid())
  projectName     String     // "MT. FERIMAS SEJAHTERA / TAHUN 2025"
  vesselName      String     // "MT. FERIMAS SEJAHTERA"
  customerCompany String?    // "PT. Industri Transpalme"
  vesselSpecs     Json?      // {loa, lpp, breadth, dwt_gt, dok_type, status}
  status          String     @default("ACTIVE") // ACTIVE, COMPLETED, ON_HOLD
  startDate       DateTime?
  endDate         DateTime?
  notes           String?    @db.Text
  
  // Relations
  workItems       WorkItem[]
  
  // Timestamps
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  @@map("projects")
}

// Work Item Templates for standardized work items
model WorkItemTemplate {
  id                String   @id @default(cuid())
  packageLetter     String   @db.VarChar(1)  // 'A', 'B', 'C'
  packageName       String   // 'PELAYANAN UMUM', 'UNIT PERAWATAN LAMBUNG & TANGKI'
  itemNumber        String?  @db.VarChar(10) // '1', '2', '3'
  itemTitle         String?  @db.Text        // 'Setibanya di muara...'
  
  // Hierarchical template structure
  parentTemplateId  String?
  parent            WorkItemTemplate? @relation("TemplateHierarchy", fields: [parentTemplateId], references: [id], onDelete: Cascade)
  children          WorkItemTemplate[] @relation("TemplateHierarchy")
  
  level             String   // 'PACKAGE', 'ITEM', 'SUB_ITEM', 'REALIZATION'
  subLetter         String?  @db.VarChar(1)  // 'a', 'b', 'c', 'd', 'e'
  title             String   @db.Text
  description       String?  @db.Text
  volume            Decimal? @db.Decimal(10,2)
  unit              String?  @db.VarChar(10) // 'mÂ²', 'ls', 'set', 'hr'
  hasRealization    Boolean  @default(false)
  displayOrder      Int      @default(0)
  isActive          Boolean  @default(true)
  
  // Relations
  workItems         WorkItem[]
  
  // Timestamps
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("work_item_templates")
}

// Hierarchical WorkItem Model for Task Management
model WorkItem {
  id              String     @id
  number          Int?
  category        String?
  title           String     @db.Text
  description     String?    @db.Text
  volume          Int?
  unit            String?
  status          String?
  completion      Int        @default(0)
  imageUrl        String?
  
  // Hierarchical structure
  parentId        String?
  parent          WorkItem?  @relation("WorkItemHierarchy", fields: [parentId], references: [id], onDelete: Cascade)
  children        WorkItem[] @relation("WorkItemHierarchy")
  
  // Project management fields
  package         String?
  durationDays    Int?
  startDate       String?
  finishDate      String?
  resourceNames   String     @default("")
  isMilestone     Boolean    @default(false)
  dependsOnIds    Json?
  
  // Project Relations
  projectId       String?
  project         Project?  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  // Template Relations
  templateId      String?
  template        WorkItemTemplate? @relation(fields: [templateId], references: [id])
  
  // Relations
  tasks           Task[]
  
  // Timestamps
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  @@map("work_items")
}

// Task Model for detailed project planning
model Task {
  id              String   @id @default(cuid())
  name            String
  description     String?  @db.Text
  startDate       DateTime
  endDate         DateTime
  status          String   @default("PLANNED") // PLANNED, IN_PROGRESS, COMPLETED, CANCELLED
  priority        String   @default("MEDIUM")  // LOW, MEDIUM, HIGH, CRITICAL
  assignedTo      String?
  estimatedHours  Int?
  actualHours     Int?
  completion      Int      @default(0)
  
  // Relations
  workItemId      String?
  workItem        WorkItem? @relation(fields: [workItemId], references: [id])
  
  // Project fields
  resourceNames   String   @default("")
  dependencies    Json?
  tags            Json?
  
  // Timestamps
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("tasks")
}

